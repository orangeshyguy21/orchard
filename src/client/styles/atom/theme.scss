@use '@angular/material' as mat;

/****************************************
* Angular Material Supported Overrides
****************************************/

/* Application Level Overrides */
:root {
	@include mat.table-overrides((
		row-item-outline-color: var(--mat-sys-outline-variant),
	));
}

/* Specific Table Overrides */
.orc-feature-table {
	@include mat.table-overrides((
		header-container-height: 2.5rem,
		row-item-container-height: 3.0rem,
	));
}

/* Specific Form Field Overrides */
.orc-array-form-field {
	@include mat.form-field-overrides((
		container-height: 2rem,
	));
}

.orc-cold-form-field{
	@include mat.form-field-overrides((
		filled-label-text-weight: 600,
		filled-container-color: transparent,
	));
}


/****************************************
* Angular Material Unsupported Overrides (todo these are supported, messed this up)
****************************************/

/* Specific Form Field Overrides */
// orc-dynamic-form-field 
:root {
	.mat-mdc-form-field{
		&.orc-cold-form-field {
			.mdc-text-field--filled{
				border-left-width: 1px;
				border-right-width: 1px;
				border-top-width: 1px;
				border-left-style: solid;
				border-right-style: solid;
				border-top-style: solid;
				border-left-color: var(--mat-sys-outline-variant);
				border-right-color: var(--mat-sys-outline-variant);
				border-top-color: var(--mat-sys-outline-variant);
			}

			.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before {
				border-bottom-style: solid;
				border-bottom-color:  var(--mat-sys-outline-variant);
				
			}

			&.mat-form-field-hide-placeholder{
				.mdc-text-field--filled{
					border-left-style: dashed;
					border-right-style: dashed;
					border-top-style: dashed;
					border-left-color: var(--mat-sys-outline);
					border-right-color: var(--mat-sys-outline);
					border-top-color: var(--mat-sys-outline);
				}
				.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before {
					border-bottom-style: dashed;
					border-bottom-color:  var(--mat-sys-outline);
				}
			}
		}
	}

	.mat-mdc-form-field{
		&.orc-hot-form-field {
			.mdc-text-field--filled{
				border-left-width: 1px;
				border-right-width: 1px;
				border-top-width: 1px;

				border-left-style: solid;
				border-right-style: solid;
				border-top-style: solid;

				border-left-color: transparent;
				border-right-color: transparent;
				border-top-color: transparent;
			}
		}
	}

	.mat-mdc-form-field{
		&.orc-dynamic-form-field {

			.mdc-notched-outline__leading,
			.mdc-notched-outline__notch,
			.mdc-notched-outline__trailing {
				border-color: var(--mat-sys-outline-variant);
				transition: border-color 0.15s ease-in-out;
			}
		  
			&:hover .mdc-notched-outline__leading,
			&:hover .mdc-notched-outline__notch,
			&:hover .mdc-notched-outline__trailing {
				border-color: var(--mat-sys-on-primary-container);
			}
	
			&.mat-form-field-hide-placeholder{
				.mdc-notched-outline__leading{
					border-top-style: dashed;
					border-left-style: dashed;
					border-bottom-style: dashed;
				}
				.mdc-notched-outline__notch{
					border-top-style: dashed;
					border-bottom-style: dashed;
				}
				.mdc-notched-outline__trailing{
					border-top-style: dashed;
					border-right-style: dashed;
					border-bottom-style: dashed;
				}
				.mdc-notched-outline__leading,
				.mdc-notched-outline__notch,
				.mdc-notched-outline__trailing {
					border-color: var(--mat-sys-outline);
					transition: border-color 0.15s ease-in-out;
				}

				&:hover .mdc-notched-outline__leading,
				&:hover .mdc-notched-outline__notch,
				&:hover .mdc-notched-outline__trailing {
					border-color: var(--mat-sys-on-primary-container);
					background-color: var(--mat-sys-surface-container);
				}
			}
		}
	}
}
// orc-array-form-field
:root {
	.orc-array-form-field{
		.mat-mdc-form-field-flex {
			margin-right: 0.25rem;
		}
	}
}

.mat-mdc-form-field-textarea-control {
	&.orc-autogrow{
		resize: none;
	}
}

// :root {
// 	.mat-mdc-icon-button {
// 		&.orc-icon-button {
// 			.mdc-icon-button__ripple {
// 				&:before {
// 					transition: background-color 0.1s ease-in-out;
// 				}
// 			}

// 			// &:hover .mdc-icon-button__ripple {
// 			// 	background-color: var(--mat-sys-primary-container);
// 			// }
// 		}
// 	}
// }