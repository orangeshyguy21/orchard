# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

enum MintAnalyticsInterval {
  day
  month
  week
}

enum MintQuoteStatus {
  ISSUED
  PAID
  PENDING
  UNPAID
}

enum MintUnit {
  auth
  btc
  eur
  msat
  sat
  usd
}

type OrchardCachedEndpoint {
  method: String!
  path: String!
}

type OrchardContact {
  info: String!
  method: String!
}

type OrchardMintAnalytics {
  amount: Int!
  created_time: UnixTimestamp!
  operation_count: Int!
  unit: MintUnit!
}

type OrchardMintBalance {
  balance: Int!
  keyset: String!
}

type OrchardMintDatabase {
  db: String!
  version: Int!
}

type OrchardMintInfo {
  contact: [OrchardContact!]!
  description: String!
  description_long: String!
  icon_url: String!
  name: String!
  nuts: [OrchardNut!]!
  pubkey: String!
  time: UnixTimestamp!
  urls: [String!]!
  version: String!
}

type OrchardMintKeyset {
  active: Boolean!
  derivation_path: String!
  encrypted_seed: String
  first_seen: UnixTimestamp!
  id: ID!
  input_fee_ppk: Int!
  seed: String!
  seed_encryption_method: String
  unit: String!
  valid_from: UnixTimestamp!
  valid_to: UnixTimestamp!
  version: String!
}

type OrchardMintMeltQuote {
  amount: Int!
  change: String
  checking_id: String!
  created_time: UnixTimestamp
  expiry: UnixTimestamp
  fee_paid: Int
  fee_reserve: Int
  method: String!
  paid: Boolean!
  paid_time: UnixTimestamp
  proof: String
  quote: ID!
  request: String!
  state: String
  unit: MintUnit!
}

type OrchardMintMintQuote {
  amount: Int!
  checking_id: String!
  created_time: UnixTimestamp
  issued: Boolean!
  method: String!
  paid: Boolean!
  paid_time: UnixTimestamp
  pubkey: String
  quote: ID!
  request: String!
  state: String
  unit: MintUnit!
}

type OrchardMintPromise {
  amount: Int!
  b_: ID!
  c_: String!
  created: UnixTimestamp
  dleq_e: String
  dleq_s: String
  id: String
  mint_quote: String
  swap_id: String
}

type OrchardMintProof {
  amount: Int!
  c: String!
  created: UnixTimestamp
  id: String
  melt_quote: String
  secret: String!
  witness: String
  y: String
}

type OrchardNut {
  cached_endpoints: [OrchardCachedEndpoint!]
  disabled: Boolean
  methods: [OrchardNutMethod!]
  nut: Float!
  supported: Boolean
  supported_meta: [OrchardNutSupported!]
  ttl: Float
}

type OrchardNutMethod {
  description: Boolean
  method: String!
  unit: String!
}

type OrchardNutSupported {
  commands: [String!]!
  method: String!
  unit: String!
}

type OrchardStatus {
  online: Boolean!
  title: String!
}

type Query {
  mint_analytics_balance_sum(date_end: UnixTimestamp, date_start: UnixTimestamp, timezone: Timezone, units: [MintUnit!]): [OrchardMintAnalytics!]!
  mint_analytics_balances(date_end: UnixTimestamp, date_start: UnixTimestamp, interval: MintAnalyticsInterval, timezone: Timezone, units: [MintUnit!]): [OrchardMintAnalytics!]!
  mint_balances: [OrchardMintBalance!]!
  mint_balances_issued: [OrchardMintBalance!]!
  mint_balances_redeemed: [OrchardMintBalance!]!
  mint_databases: [OrchardMintDatabase!]!
  mint_info: OrchardMintInfo!
  mint_keysets: [OrchardMintKeyset!]!
  mint_melt_quotes: [OrchardMintMeltQuote!]!
  mint_mint_quotes(date_end: UnixTimestamp, date_start: UnixTimestamp, status: [MintQuoteStatus!], unit: [MintUnit!]): [OrchardMintMintQuote!]!
  mint_promises(date_end: UnixTimestamp, date_start: UnixTimestamp, id_keysets: [String!]): [OrchardMintPromise!]!
  mint_proofs_pending: [OrchardMintProof!]!
  mint_proofs_used: [OrchardMintProof!]!
  status: OrchardStatus!
}

"""Timezone custom scalar type based on IANA timezone database"""
scalar Timezone

"""A Unix timestamp in seconds"""
scalar UnixTimestamp